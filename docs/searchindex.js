Search.setIndex({"docnames": ["contributing", "index", "modules/compute/compute_degree", "modules/compute/compute_distance", "modules/compute/compute_draw", "modules/compute/compute_merge", "modules/compute/compute_uf", "modules/compute/index", "modules/data/data_merge", "modules/data/data_networkx", "modules/data/data_reeb", "modules/data/index", "modules/index", "modules/reeb/index", "modules/reeb/mergetree", "modules/reeb/reebgraph", "notebooks/example_reeb_graphs", "notebooks/index", "notebooks/juggling_man", "notebooks/merge_basics", "notebooks/reeb_basics", "notebooks/reeb_plot", "notebooks/sandbox"], "filenames": ["contributing.rst", "index.md", "modules/compute/compute_degree.rst", "modules/compute/compute_distance.rst", "modules/compute/compute_draw.rst", "modules/compute/compute_merge.rst", "modules/compute/compute_uf.rst", "modules/compute/index.md", "modules/data/data_merge.rst", "modules/data/data_networkx.rst", "modules/data/data_reeb.rst", "modules/data/index.md", "modules/index.md", "modules/reeb/index.rst", "modules/reeb/mergetree.md", "modules/reeb/reebgraph.md", "notebooks/example_reeb_graphs.ipynb", "notebooks/index.md", "notebooks/juggling_man.ipynb", "notebooks/merge_basics.ipynb", "notebooks/reeb_basics.ipynb", "notebooks/reeb_plot.ipynb", "notebooks/sandbox.ipynb"], "titles": ["Info on contributing to the project", "ceREEBerus: Reeb Graph Computations in Python", "<span class=\"section-number\">3.1. </span>Degree", "<span class=\"section-number\">3.5. </span>Distance", "<span class=\"section-number\">3.2. </span>Draw", "<span class=\"section-number\">3.3. </span>Merge", "<span class=\"section-number\">3.4. </span>Union Find", "<span class=\"section-number\">3. </span>Compute Module", "<span class=\"section-number\">2.2. </span>Merge", "Networkx Graphs", "<span class=\"section-number\">2.1. </span>Reeb Graphs", "<span class=\"section-number\">2. </span>Example Data and graphs", "Modules", "<span class=\"section-number\">1. </span>The <cite>reeb</cite> module", "<span class=\"section-number\">1.2. </span>Merge tree", "<span class=\"section-number\">1.1. </span>Reeb Graph class", "<span class=\"section-number\">2. </span>Example Reeb graphs", "Jupyter Notebooks", "<span class=\"section-number\">3. </span>Juggling Man Example", "Merge tree tutorials and such", "Basic Tutorial: Reeb graph class", "<span class=\"section-number\">1. </span>Examples of Reeb graphs", "Sandbox for testing purposes"], "terms": {"thi": [0, 1, 3, 5, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22], "us": [0, 1, 2, 3, 4, 8, 9, 10, 11, 15, 18, 20, 21], "here": [0, 20, 21], "cheat": 0, "sheet": 0, "howev": [0, 7], "also": [0, 3, 21], "work": [0, 1, 19], "It": 0, "": [0, 3, 5, 6, 21], "greatest": 0, "though": 0, "so": [0, 3, 7, 15, 19, 20, 21], "eventu": 0, "need": 0, "todo": [0, 20], "write": 0, "up": [0, 1, 2, 6, 15, 20, 21], "how": [0, 21], "stuff": 0, "copi": 0, "from": [0, 1, 2, 3, 8, 15, 16, 18, 20, 21, 22], "sphinx": 0, "rtd": 0, "theme": 0, "ar": [0, 4, 6, 15, 20, 21, 22], "some": [0, 21], "minim": [0, 2, 15, 21], "exampl": [0, 1, 9, 10, 12, 17, 19], "docstr": 0, "method": [0, 20, 21], "return": [0, 2, 3, 4, 5, 6, 9, 10, 15, 20], "subgraph": [0, 15], "reeb": [0, 2, 3, 4, 5, 7, 9, 11, 12, 17, 18, 22], "graph": [0, 2, 3, 4, 5, 6, 7, 12, 13, 17, 18, 22], "imag": [0, 15, 16, 18], "open": [0, 15, 20], "interv": [0, 15], "b": [0, 4, 15, 20], "convert": [0, 15], "ani": [0, 6, 15], "edg": [0, 4, 9, 15, 20, 21, 22], "cross": [0, 15, 20], "slice": [0, 15, 22], "vertic": [0, 6, 15, 20, 22], "paramet": [0, 2, 3, 4, 5, 15, 20, 21], "float": [0, 4, 15, 20], "The": [0, 1, 2, 3, 4, 5, 6, 7, 15, 19, 20, 21, 22], "lower": [0, 15, 20], "bound": [0, 15], "upper": [0, 2, 15], "reebgraph": [0, 10, 13, 15, 18, 20, 21, 22], "equat": 0, "link": 0, "includ": [0, 1, 2, 3, 5, 6, 15, 20, 21], "code": [0, 1, 3, 7, 18], "snippet": 0, "contribut": 1, "info": 1, "markdown": [1, 15], "v": [1, 15, 16, 20, 21, 22], "restructuredtext": 1, "document": [1, 3, 12], "thing": [1, 16], "i": [1, 2, 3, 5, 6, 8, 9, 15, 16, 17, 18, 20, 21], "alwai": 1, "forget": 1, "modul": [1, 2, 3, 5, 6, 8, 9, 10, 11], "class": [1, 4, 6, 10, 12, 13, 21], "graphic": [1, 12], "signatur": [1, 12], "data": [1, 6, 8, 9, 10, 12, 16, 18, 19, 20, 21, 22], "tutori": 1, "notebook": [1, 10, 21], "juggl": [1, 9, 10, 17], "man": [1, 9, 10, 17, 21], "packag": [1, 15, 19, 21, 22], "particular": 1, "view": 1, "toward": 1, "interleav": 1, "distanc": [1, 6, 7, 8, 12, 19], "an": [1, 3, 15, 20, 21, 22], "appli": 1, "context": 1, "you": [1, 2, 15, 20, 21], "can": [1, 2, 10, 15, 20, 21], "either": 1, "updat": [1, 18], "latest": 1, "version": [1, 7, 15, 20], "pip": 1, "most": [1, 20, 22], "date": 1, "clone": 1, "repo": 1, "git": 1, "github": [1, 6], "com": [1, 6], "munchlab": 1, "cd": 1, "compil": 1, "done": [1, 20], "elizabeth": 1, "munch": 1, "her": 1, "research": 1, "group": 1, "lead": 1, "develop": 1, "daniel": 1, "barn": 1, "other": [1, 3, 8, 20, 21], "peopl": 1, "who": 1, "have": [1, 5, 15, 18, 20], "elena": 1, "wang": 1, "liz": 1, "msu": 1, "edu": 1, "barnesd8": 1, "function": [2, 3, 4, 5, 6, 8, 9, 15, 18, 19, 20, 21, 22], "comput": [2, 3, 4, 5, 6, 9, 10, 11, 12, 15, 20], "down": [2, 15, 21, 22], "cereeberu": [2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22], "up_degre": [2, 7, 15], "r": [2, 4, 5, 15, 16, 19, 21, 22], "fx": [2, 5, 19, 20], "sourc": [2, 3, 4, 5, 6, 8, 9, 10, 15], "deprec": [2, 7], "instead": 2, "node": [2, 3, 4, 5, 6, 8, 15, 16, 20, 21, 22], "networkx": [2, 3, 5, 15, 19, 20], "dictionari": [2, 15, 20], "type": [2, 3, 4, 5, 9, 15, 20], "up_deg": [2, 21], "dict": [2, 5, 15, 20], "down_degre": [2, 7, 15], "down_deg": [2, 21], "add_nod": [2, 7, 15, 20], "x": [2, 15, 20], "0": [2, 3, 4, 5, 7, 15, 16, 18, 20, 21, 22], "add": [2, 15, 20, 21, 22], "now": [2, 22], "minimal_reeb": [2, 7], "creat": [2, 6, 15, 19, 20], "remove_isol": [2, 7, 15, 19], "remov": [2, 15, 21], "isol": [2, 9, 15, 20], "import": [2, 16, 18, 19, 20, 21, 22], "merg": [2, 3, 4, 6, 7, 11, 12, 13], "tree": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13], "height": [2, 3, 6, 7], "edit": [3, 7, 19], "r1": 3, "r2": 3, "between": [3, 4, 15, 19, 22], "two": [3, 4, 6, 15, 20], "graph_edit_dist": 3, "http": 3, "org": 3, "stabl": 3, "refer": [3, 6], "algorithm": 3, "similar": 3, "html": 3, "edit_dist": 3, "int": [3, 5, 15, 20], "findfiltr": [3, 7], "theta": 3, "origin": 3, "get": [3, 6, 15, 16, 21, 22], "line": [3, 4, 6, 15, 20, 22], "slope": [3, 4], "go": [3, 20, 22], "through": [3, 4], "point": [3, 4, 6, 15], "track": 3, "invers": 3, "flag": 3, "dist": 3, "getheightmatrix": [3, 7], "mt": 3, "verbos": [3, 5, 6, 15, 19, 20, 22], "fals": [3, 5, 6, 15, 19, 20, 22], "lca": 3, "assum": [3, 5], "better": 3, "than": 3, "eulerian": 3, "tour": 3, "spare": 3, "tabl": 3, "min": [3, 20], "rang": [3, 18], "queri": 3, "matrix": [3, 21], "pairwis": 3, "tarjan": 3, "offlin": 3, "optim": 3, "ackermann": 3, "o": [3, 18], "approxim": 3, "calcdistancematrix": [3, 7], "mt0": 3, "mt1": 3, "calcul": 3, "differ": 3, "calcdistanceinfnorm": [3, 7], "infin": 3, "norm": 3, "complet": [3, 21], "flow": 3, "separ": 3, "util": 3, "getunitvector": [3, 7], "angl": 3, "2d": 3, "unit": 3, "vector": 3, "input": [3, 6, 9, 18], "getmidpointkei": [3, 7], "arr": 3, "target": 3, "midpoint": [3, 4], "kei": [3, 6, 20], "region": 3, "contain": [3, 4, 9, 10, 11, 13], "computegraphdistanceatangl": [3, 7], "g1": 3, "g2": 3, "criticaldict": 3, "midpointdict": 3, "embed": 3, "given": [3, 5, 6, 20], "cach": 3, "precomput": 3, "infer": 3, "all": [3, 6, 15, 21, 22], "computedistanceatanglefrommt": [3, 7], "g1_orig": 3, "g2_orig": 3, "precis": [3, 5, 6, 19], "5": [3, 5, 6, 18, 19, 20, 21, 22], "show": [3, 15, 20, 21], "full": [3, 12], "computedistanceful": [3, 7], "necessari": 3, "pre": 3, "matric": 3, "everi": [3, 21], "critic": 3, "directedmergetreedist": [3, 7], "plot": [3, 4, 9, 15, 21], "true": [3, 5, 6, 15, 19, 20, 21, 22], "xmin": 3, "xmax": 3, "6": [3, 16, 18, 20, 21, 22], "283185307179586": 3, "n": [3, 8, 22], "10000": 3, "over": 3, "linspac": 3, "driver": 3, "intern": [3, 6], "helper": 4, "dict_to_list": [4, 7], "d": 4, "line_loop_index": [4, 7], "determin": 4, "should": [4, 15, 22], "loop": [4, 9, 10, 21], "2": [4, 18, 19, 20, 21, 22], "element": 4, "tupl": [4, 5, 6, 20], "line_index": 4, "list": [4, 6, 15, 20], "indic": 4, "drawn": [4, 18], "loop_index": 4, "slope_intercept": [4, 7], "pt0": 4, "pt1": 4, "intercept": 4, "bezier": 4, "curv": 4, "order": [4, 20], "pair": 4, "first": 4, "second": 4, "m": [4, 19, 22], "bezier_curv": [4, 7], "midpt": 4, "singl": [4, 15], "set": [4, 15, 20, 22], "pass": [4, 15, 20, 21], "arrai": [4, 6], "np": [4, 5], "reeb_plot": [4, 7, 19, 20], "po": [4, 18, 20], "cpx": [4, 15, 16, 20, 21], "1": [4, 5, 7, 8, 15, 16, 18, 19, 20, 21, 22], "cpy": [4, 15, 20], "main": [4, 5, 21], "object": [4, 5, 15, 20], "cp": 4, "control": [4, 15, 21], "curvatur": 4, "custom": [4, 21], "visual": 4, "test": [5, 9, 15], "ismerg": [5, 7, 19], "t": [5, 15, 20], "take": [5, 20], "check": 5, "see": [5, 12], "root": [5, 6, 8], "ha": [5, 7, 21], "valu": [5, 9, 15, 20, 21, 22], "inf": [5, 19], "bool": [5, 15, 20], "computemergetre": [5, 7, 19], "filtrat": [5, 6, 19], "8": [5, 18, 20, 22], "7": [5, 18, 19, 20, 21, 22], "infadjust": 5, "none": [5, 10, 15, 20], "size": [5, 6], "filter": [5, 19], "build": [5, 6], "adjust": 5, "infinit": 5, "rmt": 5, "uf": 6, "signeddisttoline2pt": [6, 7], "pt": 6, "p0": 6, "p1": 6, "sign": 6, "where": 6, "defin": [6, 8, 15, 20], "posit": [6, 15, 18, 20, 21, 22], "abov": [6, 20, 22], "left": [6, 20], "expect": 6, "right": 6, "invert": [6, 8], "back": 6, "under": 6, "angle_sign": 6, "_computenodeheight": 6, "mergetre": [6, 19], "py": [6, 22], "getsortednodeheight": [6, 7], "each": [6, 15, 21], "sort": [6, 20], "round": 6, "unionfind": [6, 7], "index": 6, "implement": [6, 19], "inspir": 6, "william": 6, "fiset": 6, "java": 6, "williamfiset": 6, "structur": 6, "special": 6, "reroot": 6, "handl": [6, 21, 22], "construct": [6, 9], "__init__": [6, 15, 20], "repres": 6, "themselv": 6, "individu": 6, "compon": [6, 15], "getnumcompon": 6, "number": [6, 15, 22], "total": 6, "connect": [6, 15], "getsizeofcompon": 6, "c": 6, "getsiz": 6, "max": [6, 20], "rerootcompon": 6, "newroot": 6, "make": [6, 15, 18, 21], "new": [6, 15, 20], "c1": 6, "c2": 6, "isfullyconnect": 6, "fulli": 6, "printal": 6, "print": [6, 15, 20, 21, 22], "larg": 7, "been": 7, "enter": 7, "your": 7, "own": 7, "risk": 7, "degre": [7, 12, 15, 21], "draw": [7, 12, 15, 16, 20, 21, 22], "union": [7, 12], "find": [7, 12], "allow": 8, "creation": 8, "random": [8, 19], "randommergetre": [8, 19], "randommerg": [8, 11, 19], "10": [8, 18, 19, 20, 22], "gener": [8, 15, 18], "ex_graph": [9, 20, 22], "torus_graph": [9, 20], "nx": [9, 15, 20], "toru": [9, 10, 11, 16, 20, 21], "reeb_torus_no_fx": 9, "dancing_man": [9, 10, 11, 16, 21], "danc": [9, 10, 21], "juggling_man": [9, 10, 11, 16, 18, 19, 22], "which": [9, 15, 21], "simple_loop": [9, 10, 11, 16, 21], "simpl": [9, 10, 15, 20], "simple_loops_unord": [9, 10, 11], "unord": 9, "pictur": 10, "seen": 10, "ex_reebgraph": [10, 16, 20, 21, 22], "seed": [10, 15, 16, 20, 21], "below": [12, 20], "avail": [12, 21], "both": [13, 19, 21, 22], "come": 14, "soon": 14, "major": 15, "assign": 15, "ye": 15, "g": [15, 19, 20], "f": [15, 16, 20, 21, 22], "A": [15, 20], "store": [15, 20, 21], "multidigraph": 15, "directed": 15, "follow": [15, 21], "convent": 15, "goe": 15, "higher": [15, 20], "initi": [15, 20], "option": [15, 20], "If": [15, 20, 21], "empti": [15, 20], "associ": [15, 20], "spring": [15, 20], "layout": [15, 20], "out": [15, 20, 22], "addit": [15, 20], "inform": [15, 20], "dure": [15, 20, 22], "summari": 15, "number_connected_compon": [15, 20], "vertex": [15, 20, 22], "f_vertex": [15, 20], "reset_po": [15, 20, 22], "hashabl": 15, "like": [15, 19], "str": [15, 18, 20], "name": [15, 18, 20, 21], "being": 15, "ad": [15, 17, 20, 22], "reset": [15, 21], "base": [15, 20], "add_nodes_from": [15, 20], "f_dict": 15, "f_valu": 15, "remove_nod": [15, 22], "remove_nodes_from": 15, "add_edg": [15, 20, 22], "u": [15, 21, 22], "sure": [15, 20], "note": [15, 20, 21], "same": [15, 21], "collaps": [15, 22], "one": [15, 22], "add_edges_from": [15, 20], "subdivide_edg": [15, 21], "w": [15, 21], "f_w": [15, 21], "subdivid": [15, 21], "remove_regular_vertex": 15, "regular": [15, 21], "repla": 15, "remove_all_regular_vertic": [15, 20, 21], "set_pos_from_f": [15, 20, 21], "result": [15, 20, 21], "y": [15, 20], "overwrit": [15, 20], "previou": [15, 20], "fanci": [15, 20], "loopi": [15, 21], "multiedg": [15, 21], "draw_straight_lin": [15, 20, 21, 22], "ax": [15, 20, 21, 22], "kwarg": [15, 20], "straight": [15, 20], "veri": [15, 20], "multi": [15, 20], "thei": [15, 20], "won": [15, 20], "matplotlib": [15, 16, 20], "axi": [15, 20], "figur": [15, 20], "keyword": [15, 20], "argument": [15, 20], "induced_subgraph": [15, 20], "induc": 15, "connected_compon": [15, 20], "provid": [15, 19, 21], "want": [15, 18, 20], "actual": 15, "get_largest_compon": 15, "largest": 15, "well": [15, 20], "unless": 15, "25": [16, 20], "pyplot": [16, 20], "plt": [16, 20], "36": 16, "titl": 16, "savefig": 16, "png": [16, 18], "bbox_inch": 16, "tight": 16, "39": [16, 19, 20, 22], "40": 16, "41": 16, "just": 16, "try": [16, 22], "nice": 16, "enumer": 16, "pos_f": [16, 20, 21], "section": 17, "front": 18, "page": 18, "mayb": 18, "exactli": 18, "gonna": 18, "more": 18, "3": [18, 20, 21, 22], "jm": [18, 19], "plot_reeb": [18, 19, 21], "4": [18, 19, 20, 21, 22], "9": [18, 19, 20, 21, 22], "75": 18, "imageio": 18, "filenam": 18, "j": 18, "30": 18, "juggling_men": 18, "append": 18, "imread": 18, "mimsav": 18, "gif": 18, "lt": [18, 20, 21, 22], "ipython": 18, "7fee0323f9a4": 18, "gt": [18, 20, 21, 22], "deprecationwarn": 18, "start": [18, 20], "v3": 18, "behavior": 18, "switch": 18, "iio": 18, "To": [18, 21], "keep": 18, "current": 18, "warn": 18, "disappear": 18, "v2": 18, "call": [18, 20, 21, 22], "directli": 18, "wa": 19, "stolen": 19, "old": [19, 22], "ipynb": 19, "file": [19, 22], "part": [19, 20, 22], "alreadi": 19, "jm_im": 19, "cmt": 19, "compliment": 19, "ex_rg": [20, 22], "h": [20, 22], "48864": 20, "17": 20, "e": [20, 21, 22], "in_degre": 20, "out_degre": 20, "chicken": 20, "11": [20, 21, 22], "12": [20, 21], "13": 20, "with_label": [20, 21, 22], "14": [20, 21], "dict_kei": 20, "15": [20, 21], "16": [20, 21], "v_list": 20, "break": 20, "18": 20, "h_cc": 20, "20": 20, "5_lower": 20, "5_upper": 20, "19": 20, "e_list": 20, "22": [20, 21], "21": 20, "26": 20, "inv": 20, "int_typ": 20, "27": 20, "28": 20, "cover": 20, "entir": [20, 22], "extend": 20, "join": 20, "31": 20, "elif": 20, "we": [20, 21, 22], "_lower": 20, "_upper": 20, "els": 20, "half": 20, "lambda": 20, "edge_nam": 20, "must": [20, 22], "assert": 20, "vert_in": 20, "func_val": 20, "23": 20, "24": 20, "graph_ex": 20, "nameerror": 20, "traceback": [20, 22], "recent": [20, 22], "last": [20, 22], "cell": [20, 22], "In": [20, 21, 22], "get_node_attribut": 20, "add_vertex": 20, "why": 20, "output": 20, "3rd": 20, "our": 20, "multigraph": 20, "attribut": [20, 21], "noth": 20, "default": 20, "standard": 20, "locat": 20, "self": [20, 22], "def": 20, "super": 20, "len": [20, 22], "spring_layout": 20, "what": 20, "doe": 20, "do": 20, "them": [20, 22], "fig": 20, "subplot": 20, "tick_param": 20, "labelleft": 20, "neighbor": 20, "adjac": [20, 21], "dict_itemiter": 20, "0x7fd42f0fcf90": 20, "relat": 21, "cereberu": 21, "reeb_toru": 21, "mani": 21, "instanti": 21, "prefer": 21, "_horizontaldraw": 21, "19541798022696485": 21, "012698776666018726": 21, "5843085161127943": 21, "2823385786868408": 21, "19974621424521702": 21, "3189969481102244": 21, "There": 21, "time": 21, "dm": 21, "next": 21, "illustr": 21, "sl": 21, "certain": 21, "demonstr": 21, "let": 21, "those": 21, "equal": 21, "equival": 21, "re": [21, 22], "command": 21, "sinc": 21, "land": 21, "top": 21, "visibl": 21, "ex_g": 22, "endpoint": 22, "outsid": 22, "insid": 22, "49": 22, "51": 22, "wlog": 22, "rid": 22, "its": 22, "edges_in": 22, "in_edg": 22, "edges_out": 22, "out_edg": 22, "correctli": 22, "52": 22, "45": 22, "nodeview": 22, "keyerror": 22, "anaconda3": 22, "lib": 22, "python3": 22, "site": 22, "153": 22, "152": 22, "154": 22, "except": 22, "anoth": 22, "occur": 22, "valueerror": 22, "155": 22, "rais": 22, "157": 22, "158": 22}, "objects": {"cereeberus.compute": [[2, 0, 0, "-", "degree"], [3, 0, 0, "-", "distance"], [4, 0, 0, "-", "draw"], [5, 0, 0, "-", "merge"], [6, 0, 0, "-", "uf"]], "cereeberus.compute.degree": [[2, 1, 1, "", "add_nodes"], [2, 1, 1, "", "down_degree"], [2, 1, 1, "", "heights"], [2, 1, 1, "", "minimal_reeb"], [2, 1, 1, "", "remove_isolates"], [2, 1, 1, "", "up_degree"]], "cereeberus.compute.distance": [[3, 1, 1, "", "calcDistanceInfNorm"], [3, 1, 1, "", "calcDistanceMatrix"], [3, 1, 1, "", "computeDistanceAtAngleFromMT"], [3, 1, 1, "", "computeDistanceFull"], [3, 1, 1, "", "computeGraphDistanceAtAngle"], [3, 1, 1, "", "directedMergeTreeDistance"], [3, 1, 1, "", "edit"], [3, 1, 1, "", "findFiltration"], [3, 1, 1, "", "getHeightMatrix"], [3, 1, 1, "", "getMidpointKey"], [3, 1, 1, "", "getUnitVector"]], "cereeberus.compute.draw": [[4, 1, 1, "", "bezier_curve"], [4, 1, 1, "", "dict_to_list"], [4, 1, 1, "", "line_loop_index"], [4, 1, 1, "", "reeb_plot"], [4, 1, 1, "", "slope_intercept"]], "cereeberus.compute.merge": [[5, 1, 1, "", "computeMergeTree"], [5, 1, 1, "", "isMerge"]], "cereeberus.compute.uf": [[6, 2, 1, "", "UnionFind"], [6, 1, 1, "", "getSortedNodeHeights"], [6, 1, 1, "", "signedDistToLine2Pts"]], "cereeberus.compute.uf.UnionFind": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "find"], [6, 3, 1, "", "getNumComponents"], [6, 3, 1, "", "getSize"], [6, 3, 1, "", "getSizeOfComponent"], [6, 3, 1, "", "isFullyConnected"], [6, 3, 1, "", "printAll"], [6, 3, 1, "", "rerootComponent"], [6, 3, 1, "", "union"]], "cereeberus.data": [[9, 0, 0, "-", "ex_graphs"], [10, 0, 0, "-", "ex_reebgraphs"], [8, 0, 0, "-", "randomMergeTrees"]], "cereeberus.data.ex_graphs": [[9, 1, 1, "", "dancing_man"], [9, 1, 1, "", "juggling_man"], [9, 1, 1, "", "reeb_torus_no_fx"], [9, 1, 1, "", "simple_loops"], [9, 1, 1, "", "simple_loops_unordered"], [9, 1, 1, "", "torus_graph"]], "cereeberus.data.ex_reebgraphs": [[10, 1, 1, "", "dancing_man"], [10, 1, 1, "", "juggling_man"], [10, 1, 1, "", "simple_loops"], [10, 1, 1, "", "simple_loops_unordered"], [10, 1, 1, "", "torus"]], "cereeberus.data.randomMergeTrees": [[8, 1, 1, "", "randomMerge"]], "cereeberus.reeb": [[15, 0, 0, "-", "reebgraph"]], "cereeberus.reeb.reebgraph": [[15, 2, 1, "", "ReebGraph"]], "cereeberus.reeb.reebgraph.ReebGraph": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "add_edge"], [15, 3, 1, "", "add_edges_from"], [15, 3, 1, "", "add_node"], [15, 3, 1, "", "add_nodes_from"], [15, 3, 1, "", "connected_components"], [15, 3, 1, "", "down_degree"], [15, 3, 1, "", "draw"], [15, 3, 1, "", "draw_straight_line"], [15, 3, 1, "", "get_largest_component"], [15, 3, 1, "", "induced_subgraph"], [15, 3, 1, "", "number_connected_components"], [15, 3, 1, "", "remove_all_regular_vertices"], [15, 3, 1, "", "remove_isolates"], [15, 3, 1, "", "remove_node"], [15, 3, 1, "", "remove_nodes_from"], [15, 3, 1, "", "remove_regular_vertex"], [15, 3, 1, "", "set_pos_from_f"], [15, 3, 1, "", "slice"], [15, 3, 1, "", "subdivide_edge"], [15, 3, 1, "", "summary"], [15, 3, 1, "", "up_degree"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"info": 0, "contribut": 0, "project": 0, "markdown": 0, "v": 0, "restructuredtext": 0, "document": 0, "thing": 0, "i": [0, 19], "alwai": 0, "forget": 0, "cereeberu": 1, "reeb": [1, 10, 13, 15, 16, 19, 20, 21], "graph": [1, 9, 10, 11, 15, 16, 19, 20, 21], "comput": [1, 7, 19], "python": 1, "tabl": 1, "content": 1, "about": 1, "instal": 1, "collabor": 1, "contact": 1, "inform": 1, "degre": [2, 19], "distanc": 3, "draw": 4, "merg": [5, 8, 14, 19], "union": 6, "find": 6, "modul": [7, 12, 13], "networkx": 9, "exampl": [11, 16, 18, 20, 21], "data": 11, "The": 13, "tree": [14, 19], "class": [15, 20], "jupyt": 17, "notebook": 17, "juggl": 18, "man": 18, "tutori": [19, 20], "you": 19, "can": 19, "also": 19, "check": 19, "To": 19, "from": 19, "we": 19, "need": 19, "first": 19, "identifi": 19, "ani": 19, "isol": 19, "node": 19, "0": 19, "remov": 19, "them": 19, "thei": 19, "go": 19, "look": 19, "Then": 19, "plot": 19, "basic": 20, "get": 20, "slice": 20, "work": 20, "liz": 20, "make": 20, "delet": 20, "eventu": 20, "sandbox": 22, "test": 22, "purpos": 22}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Info on contributing to the project": [[0, "info-on-contributing-to-the-project"]], "Info on Markdown vs. reStructuredText": [[0, "info-on-markdown-vs-restructuredtext"]], "Info on documentation": [[0, "info-on-documentation"]], "Things I always forget": [[0, "things-i-always-forget"]], "ceREEBerus: Reeb Graph Computations in Python": [[1, "cereeberus-reeb-graph-computations-in-python"]], "Table of Contents": [[1, "table-of-contents"]], "About": [[1, "about"]], "Installation": [[1, "installation"]], "Collaborators": [[1, "collaborators"]], "Contact Information": [[1, "contact-information"]], "Degree": [[2, "degree"]], "Distance": [[3, "distance"]], "Draw": [[4, "draw"]], "Merge": [[5, "merge"], [8, "merge"]], "Union Find": [[6, "union-find"]], "Compute Module": [[7, "compute-module"]], "Networkx Graphs": [[9, "networkx-graphs"]], "Reeb Graphs": [[10, "reeb-graphs"]], "Example Data and graphs": [[11, "example-data-and-graphs"]], "Modules": [[12, "modules"]], "The reeb module": [[13, "the-reeb-module"]], "Merge tree": [[14, "merge-tree"]], "Reeb Graph class": [[15, "reeb-graph-class"]], "Example Reeb graphs": [[16, "Example-Reeb-graphs"]], "Jupyter Notebooks": [[17, "jupyter-notebooks"]], "Juggling Man Example": [[18, "Juggling-Man-Example"]], "Merge tree tutorials and such": [[19, "Merge-tree-tutorials-and-such"]], "You can also check if a graph is a merge tree.": [[19, "You-can-also-check-if-a-graph-is-a-merge-tree."]], "To compute a merge tree from a Reeb Graph, we need to first identify any isolates in the graph (nodes with degree 0) and remove them as they will not be going into the merge tree. Looking at a Reeb graph with isolates:": [[19, "To-compute-a-merge-tree-from-a-Reeb-Graph,-we-need-to-first-identify-any-isolates-in-the-graph-(nodes-with-degree-0)-and-remove-them-as-they-will-not-be-going-into-the-merge-tree.-Looking-at-a-Reeb-graph-with-isolates:"]], "Then we can remove isolates and plot": [[19, "Then-we-can-remove-isolates-and-plot"]], "Basic Tutorial: Reeb graph class": [[20, "Basic-Tutorial:-Reeb-graph-class"]], "Getting slicing working": [[20, "Getting-slicing-working"]], "Liz making examples, delete eventually": [[20, "Liz-making-examples,-delete-eventually"]], "Examples of Reeb graphs": [[21, "Examples-of-Reeb-graphs"]], "Sandbox for testing purposes": [[22, "Sandbox-for-testing-purposes"]]}, "indexentries": {"add_nodes() (in module cereeberus.compute.degree)": [[2, "cereeberus.compute.degree.add_nodes"]], "cereeberus.compute.degree": [[2, "module-cereeberus.compute.degree"]], "down_degree() (in module cereeberus.compute.degree)": [[2, "cereeberus.compute.degree.down_degree"]], "heights() (in module cereeberus.compute.degree)": [[2, "cereeberus.compute.degree.heights"]], "minimal_reeb() (in module cereeberus.compute.degree)": [[2, "cereeberus.compute.degree.minimal_reeb"]], "module": [[2, "module-cereeberus.compute.degree"], [3, "module-cereeberus.compute.distance"], [4, "module-cereeberus.compute.draw"], [5, "module-cereeberus.compute.merge"], [6, "module-cereeberus.compute.uf"], [8, "module-cereeberus.data.randomMergeTrees"], [9, "module-cereeberus.data.ex_graphs"], [10, "module-cereeberus.data.ex_reebgraphs"], [15, "module-cereeberus.reeb.reebgraph"]], "remove_isolates() (in module cereeberus.compute.degree)": [[2, "cereeberus.compute.degree.remove_isolates"]], "up_degree() (in module cereeberus.compute.degree)": [[2, "cereeberus.compute.degree.up_degree"]], "calcdistanceinfnorm() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.calcDistanceInfNorm"]], "calcdistancematrix() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.calcDistanceMatrix"]], "cereeberus.compute.distance": [[3, "module-cereeberus.compute.distance"]], "computedistanceatanglefrommt() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.computeDistanceAtAngleFromMT"]], "computedistancefull() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.computeDistanceFull"]], "computegraphdistanceatangle() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.computeGraphDistanceAtAngle"]], "directedmergetreedistance() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.directedMergeTreeDistance"]], "edit() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.edit"]], "findfiltration() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.findFiltration"]], "getheightmatrix() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.getHeightMatrix"]], "getmidpointkey() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.getMidpointKey"]], "getunitvector() (in module cereeberus.compute.distance)": [[3, "cereeberus.compute.distance.getUnitVector"]], "bezier_curve() (in module cereeberus.compute.draw)": [[4, "cereeberus.compute.draw.bezier_curve"]], "cereeberus.compute.draw": [[4, "module-cereeberus.compute.draw"]], "dict_to_list() (in module cereeberus.compute.draw)": [[4, "cereeberus.compute.draw.dict_to_list"]], "line_loop_index() (in module cereeberus.compute.draw)": [[4, "cereeberus.compute.draw.line_loop_index"]], "reeb_plot() (in module cereeberus.compute.draw)": [[4, "cereeberus.compute.draw.reeb_plot"]], "slope_intercept() (in module cereeberus.compute.draw)": [[4, "cereeberus.compute.draw.slope_intercept"]], "cereeberus.compute.merge": [[5, "module-cereeberus.compute.merge"]], "computemergetree() (in module cereeberus.compute.merge)": [[5, "cereeberus.compute.merge.computeMergeTree"]], "ismerge() (in module cereeberus.compute.merge)": [[5, "cereeberus.compute.merge.isMerge"]], "unionfind (class in cereeberus.compute.uf)": [[6, "cereeberus.compute.uf.UnionFind"]], "__init__() (cereeberus.compute.uf.unionfind method)": [[6, "cereeberus.compute.uf.UnionFind.__init__"]], "cereeberus.compute.uf": [[6, "module-cereeberus.compute.uf"]], "find() (cereeberus.compute.uf.unionfind method)": [[6, "cereeberus.compute.uf.UnionFind.find"]], "getnumcomponents() (cereeberus.compute.uf.unionfind method)": [[6, "cereeberus.compute.uf.UnionFind.getNumComponents"]], "getsize() (cereeberus.compute.uf.unionfind method)": [[6, "cereeberus.compute.uf.UnionFind.getSize"]], "getsizeofcomponent() (cereeberus.compute.uf.unionfind method)": [[6, "cereeberus.compute.uf.UnionFind.getSizeOfComponent"]], "getsortednodeheights() (in module cereeberus.compute.uf)": [[6, "cereeberus.compute.uf.getSortedNodeHeights"]], "isfullyconnected() (cereeberus.compute.uf.unionfind method)": [[6, "cereeberus.compute.uf.UnionFind.isFullyConnected"]], "printall() (cereeberus.compute.uf.unionfind method)": [[6, "cereeberus.compute.uf.UnionFind.printAll"]], "rerootcomponent() (cereeberus.compute.uf.unionfind method)": [[6, "cereeberus.compute.uf.UnionFind.rerootComponent"]], "signeddisttoline2pts() (in module cereeberus.compute.uf)": [[6, "cereeberus.compute.uf.signedDistToLine2Pts"]], "union() (cereeberus.compute.uf.unionfind method)": [[6, "cereeberus.compute.uf.UnionFind.union"]], "cereeberus.data.randommergetrees": [[8, "module-cereeberus.data.randomMergeTrees"]], "randommerge() (in module cereeberus.data.randommergetrees)": [[8, "cereeberus.data.randomMergeTrees.randomMerge"]], "cereeberus.data.ex_graphs": [[9, "module-cereeberus.data.ex_graphs"]], "dancing_man() (in module cereeberus.data.ex_graphs)": [[9, "cereeberus.data.ex_graphs.dancing_man"]], "juggling_man() (in module cereeberus.data.ex_graphs)": [[9, "cereeberus.data.ex_graphs.juggling_man"]], "reeb_torus_no_fx() (in module cereeberus.data.ex_graphs)": [[9, "cereeberus.data.ex_graphs.reeb_torus_no_fx"]], "simple_loops() (in module cereeberus.data.ex_graphs)": [[9, "cereeberus.data.ex_graphs.simple_loops"]], "simple_loops_unordered() (in module cereeberus.data.ex_graphs)": [[9, "cereeberus.data.ex_graphs.simple_loops_unordered"]], "torus_graph() (in module cereeberus.data.ex_graphs)": [[9, "cereeberus.data.ex_graphs.torus_graph"]], "cereeberus.data.ex_reebgraphs": [[10, "module-cereeberus.data.ex_reebgraphs"]], "dancing_man() (in module cereeberus.data.ex_reebgraphs)": [[10, "cereeberus.data.ex_reebgraphs.dancing_man"]], "juggling_man() (in module cereeberus.data.ex_reebgraphs)": [[10, "cereeberus.data.ex_reebgraphs.juggling_man"]], "simple_loops() (in module cereeberus.data.ex_reebgraphs)": [[10, "cereeberus.data.ex_reebgraphs.simple_loops"]], "simple_loops_unordered() (in module cereeberus.data.ex_reebgraphs)": [[10, "cereeberus.data.ex_reebgraphs.simple_loops_unordered"]], "torus() (in module cereeberus.data.ex_reebgraphs)": [[10, "cereeberus.data.ex_reebgraphs.torus"]], "reebgraph (class in cereeberus.reeb.reebgraph)": [[15, "cereeberus.reeb.reebgraph.ReebGraph"]], "__init__() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.__init__"]], "add_edge() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.add_edge"]], "add_edges_from() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.add_edges_from"]], "add_node() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.add_node"]], "add_nodes_from() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.add_nodes_from"]], "cereeberus.reeb.reebgraph": [[15, "module-cereeberus.reeb.reebgraph"]], "connected_components() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.connected_components"]], "down_degree() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.down_degree"]], "draw() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.draw"]], "draw_straight_line() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.draw_straight_line"]], "get_largest_component() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.get_largest_component"]], "induced_subgraph() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.induced_subgraph"]], "number_connected_components() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.number_connected_components"]], "remove_all_regular_vertices() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.remove_all_regular_vertices"]], "remove_isolates() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.remove_isolates"]], "remove_node() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.remove_node"]], "remove_nodes_from() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.remove_nodes_from"]], "remove_regular_vertex() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.remove_regular_vertex"]], "set_pos_from_f() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.set_pos_from_f"]], "slice() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.slice"]], "subdivide_edge() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.subdivide_edge"]], "summary() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.summary"]], "up_degree() (cereeberus.reeb.reebgraph.reebgraph method)": [[15, "cereeberus.reeb.reebgraph.ReebGraph.up_degree"]]}})